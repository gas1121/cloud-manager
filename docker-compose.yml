version: "3.2"
services:
  cloud-manager:
    build:
      context: .
      dockerfile: docker/cloudmanager/Dockerfile
      args:
        - USE_MIRROR=${USE_MIRROR:-0}
    working_dir: /app
    volumes: 
      - ./cloudmanager:/app
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    networks:
      - cloud-manager
    secrets:
      - VULTR_KEY
      - DIGITALOCEAN_TOKEN
      - SSH_PRIVATE_KEY
      - SSH_PUBLIC_KEY
  terraform:
    build:
      context: .
      dockerfile: docker/terraform/Dockerfile
      args:
        - USE_MIRROR=${USE_MIRROR:-0}
    working_dir: /app
    volumes: 
      - tf-workspace:/app
      - tf-salt-share:/tf-salt-share
    environment:
      - TF_VAR_MASTER_COUNT=${TF_VAR_SERVANT_COUNT:-1}
      - TF_VAR_SERVANT_COUNT=${TF_VAR_SERVANT_COUNT:-0}
    networks:
      - cloud-manager
    secrets:
      - VULTR_KEY
      - DIGITALOCEAN_TOKEN
      - SSH_PRIVATE_KEY
      - SSH_PUBLIC_KEY
    entrypoint: bash -c
  salt:
    build:
      context: .
      dockerfile: docker/salt/Dockerfile
      args:
        - USE_MIRROR=${USE_MIRROR:-0}
    volumes: 
      - tf-salt-share:/tf-salt-share
      - ./docker/salt:/salt
    networks:
      - cloud-manager
    secrets:
      - VULTR_KEY
      - DIGITALOCEAN_TOKEN
      - SSH_PRIVATE_KEY
      - SSH_PUBLIC_KEY
networks:
  cloud-manager:
volumes:
  tf-workspace:
  tf-salt-share:
secrets:
  VULTR_KEY:
    file: secrets/vultr.txt
  DIGITALOCEAN_TOKEN:
    file: secrets/digitalocean.txt
  SSH_PRIVATE_KEY:
    file: secrets/ssh-private-key
  SSH_PUBLIC_KEY:
    file: secrets/ssh-key.pub
